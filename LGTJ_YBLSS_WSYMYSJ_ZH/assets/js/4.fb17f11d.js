(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{202:function(t,a,e){t.exports=e.p+"assets/img/DJI_0018.802c45ea.jpg"},209:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("img",{attrs:{src:e(202),alt:"毕业那年"}})]),t._v(" "),s("h1",{attrs:{id:"一、布局的进化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、布局的进化"}},[t._v("#")]),t._v(" 一、布局的进化")]),t._v(" "),s("p",[t._v("table -> float,poaition,inline -> flex -> grid")]),t._v(" "),s("h2",{attrs:{id:"table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[t._v("#")]),t._v(" table")]),t._v(" "),s("p",[t._v("这基本上是最早的布局方式，这种布局方式有很多缺点，不仅布局不够灵活，性能也不够高。因此当出现一种新布局的时候，这种布局很快就被淘汰了。")]),t._v(" "),s("h2",{attrs:{id:"float-position-inline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float-position-inline"}},[t._v("#")]),t._v(" float,position,inline")]),t._v(" "),s("p",[t._v("这是一种hack布局，直说就是一种浏览器兼容。既然是浏览器兼容，可想而知，他带来了一些‘奇技淫巧’,但是，他不能解决所有的问题，还会有一些新问题。比如，在这个阶段，很多工程师都解决过一个叫做“水平垂直居中”的题目，很多很多人给出了很多方案，可见这是一个混乱的年代。")]),t._v(" "),s("h2",{attrs:{id:"flex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),s("p",[t._v("后来，随着网页越来越复杂，使用hack来布局网页简直有些力不从心了。flex - 弹性盒模型就出现了，他不仅使网页布局更加方便，而且改变了UI工程师考虑问题的角度。")]),t._v(" "),s("h2",{attrs:{id:"grid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid"}},[t._v("#")]),t._v(" grid")]),t._v(" "),s("p",[t._v("随着网站设计越来越复杂，flex在很多时候也显示除了不够灵活的一方面。于是grid这种更加灵活的布局方式就出现了。")])])}),[],!1,null,null,null);a.default=r.exports}}]);